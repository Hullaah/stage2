// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: get_user_organisation.sql

package models

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getUserOrganisation = `-- name: GetUserOrganisation :one
SELECT org.org_id,
    org.name,
    org.description
FROM organisation org
    INNER JOIN membership m ON org.org_id = m.org_id
WHERE m.user_id = $1
    AND org.org_id = $2
`

type GetUserOrganisationParams struct {
	UserID pgtype.UUID
	OrgID  pgtype.UUID
}

// Gets a specific organisation which a user belongs to
func (q *Queries) GetUserOrganisation(ctx context.Context, arg GetUserOrganisationParams) (Organisation, error) {
	row := q.db.QueryRow(ctx, getUserOrganisation, arg.UserID, arg.OrgID)
	var i Organisation
	err := row.Scan(&i.OrgID, &i.Name, &i.Description)
	return i, err
}
