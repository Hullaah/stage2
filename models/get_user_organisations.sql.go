// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: get_user_organisations.sql

package models

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getUserOrganisations = `-- name: GetUserOrganisations :many
SELECT org.org_id,
    org.name,
    org.description
FROM organisation org
    INNER JOIN membership m ON org.org_id = m.org_id
WHERE m.user_id = $1
`

// Gets all the organisations a user belongs to
func (q *Queries) GetUserOrganisations(ctx context.Context, userID pgtype.UUID) ([]Organisation, error) {
	rows, err := q.db.Query(ctx, getUserOrganisations, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Organisation
	for rows.Next() {
		var i Organisation
		if err := rows.Scan(&i.OrgID, &i.Name, &i.Description); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
